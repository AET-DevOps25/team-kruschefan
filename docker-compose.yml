version: '3.8'

services:

  # Angular for frontend
  angular-client:
    build:
      context: ./client
    ports:
      - "4200:80"

  # Langchain GenAI service
  langchain-app:
    build:
      context: ./GenAI
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - OPENUI_API_KEY=${OPENUI_API_KEY}

  # Postgres for keycloak
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: forms-ai
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql:ro

  # Keycloak, user auth service
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    volumes:
      - ./keycloak/create-realm.sh:/opt/keycloak/create-realm.sh
    entrypoint: ["/opt/keycloak/create-realm.sh"]
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: forms-ai
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN} # DO NOT CHANGE!!!
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HOSTNAME: localhost
    ports:
      - "9001:8080"
    depends_on:
      - postgres
  
  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    working_dir: /etc/prometheus
    ports:
      - "9090:9090"

  # Alertmanager for alert sending
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml
    ports:
      - "9093:9093"

  # Grafana for app data visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana

  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - KEYCLOAK_REALM=forms-ai
    depends_on:
      - postgres
      - keycloak
      - mongo

  form-service:
    build:
      context: .
      dockerfile: form-service/Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  template-service:
    build:
      context: .
      dockerfile: template-service/Dockerfile
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongo

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway-service/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - user-service
      - form-service
      - template-service
      - langchain-app
      - mongo
  
  mongo:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db

volumes:
  postgres-data:
  grafana-data:
  mongo-data:


networks:
  default:
    name: shared-net