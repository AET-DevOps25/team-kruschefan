# keycloak-init-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-init-script
  namespace: team-kruschefan
data:
  create-realm.sh: |
    #!/bin/sh
    set -e

    # Start Keycloak in background
    /opt/keycloak/bin/kc.sh start-dev &

    # Wait for Keycloak to become responsive to kcadm
    echo "Waiting for Keycloak to become ready..."
    until /opt/keycloak/bin/kcadm.sh config credentials \
      --server http://localhost:8080 \
      --realm master \
      --user "$KEYCLOAK_ADMIN" \
      --password "$KEYCLOAK_ADMIN_PASSWORD"; do
        echo "Keycloak not ready yet, retrying..."
        sleep 5
    done

    echo "Logged into Keycloak CLI"

    # Create realm if it doesn't exist
    if ! /opt/keycloak/bin/kcadm.sh get realms | grep '"realm" : "forms-ai"' > /dev/null; then
      /opt/keycloak/bin/kcadm.sh create realms -s realm=forms-ai -s enabled=true
      echo "Realm 'forms-ai' created"
    else
      echo "Realm 'forms-ai' already exists"
    fi

    # Create 'user-service' confidential client if it doesn't exist
    if ! /opt/keycloak/bin/kcadm.sh get clients -r forms-ai | grep '"clientId" : "user-service"' > /dev/null; then
      echo "Creating client 'user-service'..."
      /opt/keycloak/bin/kcadm.sh create clients -r forms-ai \
        -s clientId=user-service \
        -s name="User Service" \
        -s enabled=true \
        -s serviceAccountsEnabled=true \
        -s directAccessGrantsEnabled=true \
        -s publicClient=false \
        -s protocol=openid-connect \
        -s secret="user-service-pw"
    fi

    # Create realm role 'spring' if it doesn't exist
    if ! /opt/keycloak/bin/kcadm.sh get roles -r forms-ai | grep '"name" : "spring"' > /dev/null; then
      echo "Creating realm role 'spring'..."
      /opt/keycloak/bin/kcadm.sh create roles -r forms-ai -s name=spring
    fi

    # Assign roles to service account of user-service
    SERVICE_ACCOUNT_ID=$( /opt/keycloak/bin/kcadm.sh get users -r forms-ai -q username=service-account-user-service --fields id --format csv | tail -n1 | tr -d '\r"' )

    # Assign realm role 'spring'
    /opt/keycloak/bin/kcadm.sh add-roles -r forms-ai --uusername service-account-user-service --rolename spring

    # Get the ID of the realm-management client
    REALM_MGMT_ID=$(/opt/keycloak/bin/kcadm.sh get clients -r forms-ai -q clientId=realm-management --fields id --format csv | tail -n1 | tr -d '\r"')

    # Assign view-users and manage-users to service account
    /opt/keycloak/bin/kcadm.sh add-roles -r forms-ai \
      --uusername service-account-user-service \
      --cclientid realm-management \
      --rolename view-users

    /opt/keycloak/bin/kcadm.sh add-roles -r forms-ai \
      --uusername service-account-user-service \
      --cclientid realm-management \
      --rolename manage-users

    echo "Role assignment to service account succeeded!"

    # Keep container running
    tail -f /dev/null

