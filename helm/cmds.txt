Install:
# alertmanager
helm install alertmanager ./helm/alertmanager
export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=alertmanager,app.kubernetes.io/instance=alertmanager" -o jsonpath="{.items[0].metadata.name}")
export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
kubectl --namespace default port-forward $POD_NAME 8080:$CONTAINER_PORT

# api-gateway
helm install api-gateway ./helm/api-gateway/
export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=api-gateway,app.kubernetes.io/instance=api-gateway" -o jsonpath="{.items[0].metadata.name}")
export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
kubectl port-forward $POD_NAME 8080:$CONTAINER_PORT

# client
helm install client ./helm/client/
export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=client,app.kubernetes.io/instance=client" -o jsonpath="{.items[0].metadata.name}")
export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
echo "Visit http://127.0.0.1:8080 to use your application"
kubectl --namespace default port-forward $POD_NAME 8080:$CONTAINER_PORT

# form-service
helm install form-service ./helm/form-service/
export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=form-service,app.kubernetes.io/instance=form-service" -o jsonpath="{.items[0].metadata.name}")
export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
kubectl --namespace default port-forward $POD_NAME 8080:$CONTAINER_PORT

# grafana
helm install grafana ./helm/grafana/
export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=grafana,app.kubernetes.io/instance=grafana" -o jsonpath="{.items[0].metadata.name}")
export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
kubectl --namespace default port-forward $POD_NAME 8080:$CONTAINER_PORT

# keycloak
helm dependency build ./helm/keycloak
helm install keycloak ./helm/keycloak/
export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=keycloak-wrapper,app.kubernetes.io/instance=keyclock" -o jsonpath="{.items[0].metadata.name}")
export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
kubectl --namespace default port-forward $POD_NAME 8080:$CONTAINER_PORT

# GenAI
helm install genai ./helm/langchain-app/
export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=langchain-app,app.kubernetes.io/instance=genai" -o jsonpath="{.items[0].metadata.name}")
export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
kubectl --namespace default port-forward $POD_NAME 8080:$CONTAINER_PORT

# metabase
kubectl apply -f infrastructure/k8s/metabase-pvc.yaml
helm install metabase ./helm/metabase/
export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=metabase,app.kubernetes.io/instance=metabase" -o jsonpath="{.items[0].metadata.name}")
export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
kubectl --namespace default port-forward $POD_NAME 8080:$CONTAINER_PORT

# mongo
############ helm dependency build ./helm/mongodb
############ helm -loader helm/mongo-schema-loader
export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=mongo,app.kubernetes.io/instance=mongo" -o jsonpath="{.items[0].metadata.name}")
export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
kubectl --namespace default port-forward $POD_NAME 8080:$CONTAINER_PORT

# prometheus
helm install prometheus helm/prometheus
export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=prometheus,app.kubernetes.io/instance=prometheus" -o jsonpath="{.items[0].metadata.name}")
export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
kubectl --namespace default port-forward $POD_NAME 8080:$CONTAINER_PORT

# template-service
helm install template-service helm/template-service
export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=template-service,app.kubernetes.io/instance=template-service" -o jsonpath="{.items[0].metadata.name}")
export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
kubectl --namespace default port-forward $POD_NAME 8080:$CONTAINER_PORT

# user-service # TODO: java error regarding Realm
helm install user-service helm/user-service
export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=user-service,app.kubernetes.io/instance=user-service" -o jsonpath="{.items[0].metadata.name}")
export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
kubectl --namespace default port-forward $POD_NAME 8080:$CONTAINER_PORT

# weaviate
kubectl apply -f infrastructure/k8s/weaviate-pvc.yaml
helm install weaviate helm/weaviate
export POD_NAME=$(kubectl get poinstall mongodb helm/mongodb

# mongo-express # TODO: try after mongodb
helm install mongo-express helm/mongo-express
export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=mongo-express,app.kubernetes.io/instance=mongo-express" -o jsonpath="{.items[0].metadata.name}")
export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
kubectl --namespace default port-forward $POD_NAME 8080:$CONTAINER_PORT

# mongo-schema-loader
helm install mongo-schemads --namespace default -l "app.kubernetes.io/name=weaviate,app.kubernetes.io/instance=weaviate" -o jsonpath="{.items[0].metadata.name}")
export CONTAINER_PORT=$(kubectl get pod --namespace default $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
kubectl --namespace default port-forward $POD_NAME 8080:$CONTAINER_PORT




