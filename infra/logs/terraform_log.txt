jay@MacBookPro ~/D/t/i/terraform (main)> terraform init                                   (base) 
Initializing the backend...
Initializing provider plugins...
- Finding latest version of hashicorp/aws...
- Installing hashicorp/aws v6.3.0...
- Installed hashicorp/aws v6.3.0 (signed by HashiCorp)
Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.

jay@MacBookPro ~/D/t/i/terraform (main)> terraform plan --out=tfplan                      (base) 

Terraform used the selected providers to generate the following execution plan. Resource actions
are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_iam_instance_profile.ec2_ssm_profile will be created
  + resource "aws_iam_instance_profile" "ec2_ssm_profile" {
      + arn         = (known after apply)
      + create_date = (known after apply)
      + id          = (known after apply)
      + name        = "ec2-ssm-profile"
      + name_prefix = (known after apply)
      + path        = "/"
      + role        = "ec2-ssm-access"
      + tags_all    = (known after apply)
      + unique_id   = (known after apply)
    }

  # aws_iam_role.ec2_ssm_role will be created
  + resource "aws_iam_role" "ec2_ssm_role" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "ec2.amazonaws.com"
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "ec2-ssm-access"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy (known after apply)
    }

  # aws_iam_role_policy_attachment.attach_ssm_policy will be created
  + resource "aws_iam_role_policy_attachment" "attach_ssm_policy" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess"
      + role       = "ec2-ssm-access"
    }

  # aws_instance.team_kruschefan_project will be created
  + resource "aws_instance" "team_kruschefan_project" {
      + ami                                  = "ami-0af9b40b1a16fe700"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + enable_primary_ipv6                  = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = "ec2-ssm-profile"
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "devops"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + region                               = "eu-central-1"
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Name" = "team_kruschefan_project"
        }
      + tags_all                             = {
          + "Name" = "team_kruschefan_project"
        }
      + tenancy                              = (known after apply)
      + user_data                            = <<-EOT
            #!/bin/bash
            VAR_KEYS=$(aws ssm get-parameters-by-path --path "/team-kruschefan-project" --with-decryption --query "Parameters[*].[Name,Value]" --output text)
            
            echo "$VAR_KEYS" | while read name value; do
              key=$(basename "$name")
              echo "$key=$value" >> /etc/environment
            done
        EOT
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)

      + capacity_reservation_specification (known after apply)

      + cpu_options (known after apply)

      + ebs_block_device (known after apply)

      + enclave_options (known after apply)

      + ephemeral_block_device (known after apply)

      + instance_market_options (known after apply)

      + maintenance_options (known after apply)

      + metadata_options (known after apply)

      + network_interface (known after apply)

      + private_dns_name_options (known after apply)

      + root_block_device (known after apply)
    }

  # aws_key_pair.team_kruschefan_key will be created
  + resource "aws_key_pair" "team_kruschefan_key" {
      + arn             = (known after apply)
      + fingerprint     = (known after apply)
      + id              = (known after apply)
      + key_name        = "devops"
      + key_name_prefix = (known after apply)
      + key_pair_id     = (known after apply)
      + key_type        = (known after apply)
      + public_key      = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDbko+B3+gkabO5oWIiTT1YC62hHxwjs0A3bF2UJ2pxBZKtuMLyq2Hy2b6/nJz+iYNhtwmHhvFfrfbkTtCf/FqME86gE4V3eaAW7oXsigZcr5H644/4ePUIifZbW8Ms12bvW/7FllydMkLzCb1PFcF635NORf5d+HkzWMlk0uBNXCZb6KNFidcRpkO14nAmnuWoqTBd4RM9EnFiLgofwAJqTFKDqJ13bwt2beKvlzVyBXLk14zFEdQb240W9aEknF5iyRJk64iFuJFUzu7X0Hp3s896OW/e3aN97AwSYmcBlmptFpv1nWn/9+nHsw2B0HUSdi7+MEDve6Hxi0CWSN3aCUmq41+NX0UC0r+UgjqNcY2Qlzkmr3b63OZkpO59UAX/JvvSrcsJd3uwjUjnHa2qnp2y16FXpqsWrXyP4mih72deesxriqw9u4Y20pNWli48BatvRLjsUyKE9gZwM/T8fac933HXLdhkehPy38wyi+U8ujD6CM8zvaoGAwAPIzMTW28BmX6EAxu22xGeOwcSakOrSHno/R5be8MZgQP+HQCVhRF7jQTa3sbblfMubciApeDPsMIFaeZ9BlJR7HVkwpVKOXQWK+0+ZDUAnWaPWHzUKBmr2ayMpXFNuhf9f+fxCtzHBuQuIHZbF3+28Pp2ckRV2BqLxKF52ZYYbgHj4w== terraform@kruschefan"
      + region          = "eu-central-1"
      + tags_all        = (known after apply)
    }

  # aws_security_group.team_kruschefan_sg will be created
  + resource "aws_security_group" "team_kruschefan_sg" {
      + arn                    = (known after apply)
      + description            = "Allow SSH and HTTP"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
                # (1 unchanged attribute hidden)
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + from_port        = 80
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 80
                # (1 unchanged attribute hidden)
            },
        ]
      + name                   = "ec2-ssh-web"
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + region                 = "eu-central-1"
      + revoke_rules_on_delete = false
      + tags_all               = (known after apply)
      + vpc_id                 = (known after apply)
    }

  # aws_ssm_parameter.env_vars["DEPLOYMENT"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/DEPLOYMENT"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KC_DB_PASSWORD"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KC_DB_PASSWORD"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KC_DB_USERNAME"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KC_DB_USERNAME"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KEYCLOAK_ADMIN"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KEYCLOAK_ADMIN"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KEYCLOAK_ADMIN_PASSWORD"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KEYCLOAK_ADMIN_PASSWORD"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KEYCLOAK_FORMSAI_PASSWORD"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KEYCLOAK_FORMSAI_PASSWORD"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KEYCLOAK_FORMSAI_USER"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KEYCLOAK_FORMSAI_USER"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_ADMIN"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KEYCLOAK_MOCK_ADMIN"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_ADMIN_EMAIL"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KEYCLOAK_MOCK_ADMIN_EMAIL"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_ADMIN_FIRST_NAME"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KEYCLOAK_MOCK_ADMIN_FIRST_NAME"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_ADMIN_LAST_NAME"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KEYCLOAK_MOCK_ADMIN_LAST_NAME"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_ADMIN_PASSWORD"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KEYCLOAK_MOCK_ADMIN_PASSWORD"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_USER"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KEYCLOAK_MOCK_USER"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_USER_EMAIL"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KEYCLOAK_MOCK_USER_EMAIL"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_USER_FIRST_NAME"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KEYCLOAK_MOCK_USER_FIRST_NAME"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_USER_LAST_NAME"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KEYCLOAK_MOCK_USER_LAST_NAME"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_USER_PASSWORD"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KEYCLOAK_MOCK_USER_PASSWORD"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KEYCLOAK_PASSWORD"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KEYCLOAK_PASSWORD"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["KEYCLOAK_USER"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/KEYCLOAK_USER"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["MONGO_DATABASE"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/MONGO_DATABASE"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["MONGO_INITDB_DATABASE"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/MONGO_INITDB_DATABASE"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["MONGO_INITDB_ROOT_PASSWORD"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/MONGO_INITDB_ROOT_PASSWORD"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["MONGO_INITDB_ROOT_USERNAME"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/MONGO_INITDB_ROOT_USERNAME"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["MONGO_PASSWORD"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/MONGO_PASSWORD"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["MONGO_URI"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/MONGO_URI"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["MONGO_USERNAME"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/MONGO_USERNAME"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["OPENUI_API_KEY"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/OPENUI_API_KEY"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["POSTGRES_DB"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/POSTGRES_DB"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["POSTGRES_PASSWORD"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/POSTGRES_PASSWORD"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["POSTGRES_URI"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/POSTGRES_URI"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

  # aws_ssm_parameter.env_vars["POSTGRES_USER"] will be created
  + resource "aws_ssm_parameter" "env_vars" {
      + arn            = (known after apply)
      + data_type      = (known after apply)
      + has_value_wo   = (known after apply)
      + id             = (known after apply)
      + insecure_value = (known after apply)
      + key_id         = (known after apply)
      + name           = "/team-kruschefan-project/POSTGRES_USER"
      + overwrite      = true
      + region         = "eu-central-1"
      + tags_all       = (known after apply)
      + tier           = (known after apply)
      + type           = "SecureString"
      + value          = (sensitive value)
      + value_wo       = (write-only attribute)
      + version        = (known after apply)
    }

Plan: 37 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + public_ip      = (known after apply)
  + ssh_connection = (known after apply)

────────────────────────────────────────────────────────────────────────────────────────────────

Saved the plan to: tfplan

To perform exactly these actions, run the following command to apply:
    terraform apply "tfplan"
jay@MacBookPro ~/D/t/i/terraform (main)> terraform apply "tfplan"                         (base) 
aws_ssm_parameter.env_vars["DEPLOYMENT"]: Creating...
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_USER"]: Creating...
aws_ssm_parameter.env_vars["MONGO_INITDB_ROOT_USERNAME"]: Creating...
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_USER_LAST_NAME"]: Creating...
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_ADMIN_FIRST_NAME"]: Creating...
aws_key_pair.team_kruschefan_key: Creating...
aws_ssm_parameter.env_vars["MONGO_USERNAME"]: Creating...
aws_ssm_parameter.env_vars["KC_DB_PASSWORD"]: Creating...
aws_ssm_parameter.env_vars["KEYCLOAK_ADMIN_PASSWORD"]: Creating...
aws_security_group.team_kruschefan_sg: Creating...
aws_key_pair.team_kruschefan_key: Creation complete after 1s [id=devops]
aws_ssm_parameter.env_vars["KC_DB_USERNAME"]: Creating...
aws_ssm_parameter.env_vars["KC_DB_PASSWORD"]: Creation complete after 1s [id=/team-kruschefan-project/KC_DB_PASSWORD]
aws_ssm_parameter.env_vars["DEPLOYMENT"]: Creation complete after 1s [id=/team-kruschefan-project/DEPLOYMENT]
aws_ssm_parameter.env_vars["KEYCLOAK_ADMIN"]: Creating...
aws_ssm_parameter.env_vars["MONGO_INITDB_ROOT_USERNAME"]: Creation complete after 1s [id=/team-kruschefan-project/MONGO_INITDB_ROOT_USERNAME]
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_USER_FIRST_NAME"]: Creating...
aws_ssm_parameter.env_vars["MONGO_USERNAME"]: Creation complete after 1s [id=/team-kruschefan-project/MONGO_USERNAME]
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_ADMIN_FIRST_NAME"]: Creation complete after 1s [id=/team-kruschefan-project/KEYCLOAK_MOCK_ADMIN_FIRST_NAME]
aws_ssm_parameter.env_vars["POSTGRES_URI"]: Creating...
aws_ssm_parameter.env_vars["MONGO_PASSWORD"]: Creating...
aws_ssm_parameter.env_vars["MONGO_URI"]: Creating...
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_USER"]: Creation complete after 1s [id=/team-kruschefan-project/KEYCLOAK_MOCK_USER]
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_ADMIN_EMAIL"]: Creating...
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_USER_LAST_NAME"]: Creation complete after 1s [id=/team-kruschefan-project/KEYCLOAK_MOCK_USER_LAST_NAME]
aws_ssm_parameter.env_vars["MONGO_INITDB_ROOT_PASSWORD"]: Creating...
aws_ssm_parameter.env_vars["KC_DB_USERNAME"]: Creation complete after 0s [id=/team-kruschefan-project/KC_DB_USERNAME]
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_ADMIN_PASSWORD"]: Creating...
aws_ssm_parameter.env_vars["KEYCLOAK_ADMIN_PASSWORD"]: Creation complete after 1s [id=/team-kruschefan-project/KEYCLOAK_ADMIN_PASSWORD]
aws_ssm_parameter.env_vars["OPENUI_API_KEY"]: Creating...
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_USER_FIRST_NAME"]: Creation complete after 0s [id=/team-kruschefan-project/KEYCLOAK_MOCK_USER_FIRST_NAME]
aws_ssm_parameter.env_vars["KEYCLOAK_FORMSAI_USER"]: Creating...
aws_ssm_parameter.env_vars["POSTGRES_URI"]: Creation complete after 0s [id=/team-kruschefan-project/POSTGRES_URI]
aws_iam_role.ec2_ssm_role: Creating...
aws_ssm_parameter.env_vars["MONGO_PASSWORD"]: Creation complete after 0s [id=/team-kruschefan-project/MONGO_PASSWORD]
aws_ssm_parameter.env_vars["MONGO_DATABASE"]: Creating...
aws_ssm_parameter.env_vars["KEYCLOAK_ADMIN"]: Creation complete after 0s [id=/team-kruschefan-project/KEYCLOAK_ADMIN]
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_USER_PASSWORD"]: Creating...
aws_ssm_parameter.env_vars["MONGO_URI"]: Creation complete after 0s [id=/team-kruschefan-project/MONGO_URI]
aws_ssm_parameter.env_vars["POSTGRES_USER"]: Creating...
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_ADMIN_EMAIL"]: Creation complete after 0s [id=/team-kruschefan-project/KEYCLOAK_MOCK_ADMIN_EMAIL]
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_ADMIN_PASSWORD"]: Creation complete after 0s [id=/team-kruschefan-project/KEYCLOAK_MOCK_ADMIN_PASSWORD]
aws_ssm_parameter.env_vars["POSTGRES_DB"]: Creating...
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_ADMIN"]: Creating...
aws_ssm_parameter.env_vars["MONGO_INITDB_ROOT_PASSWORD"]: Creation complete after 0s [id=/team-kruschefan-project/MONGO_INITDB_ROOT_PASSWORD]
aws_ssm_parameter.env_vars["KEYCLOAK_PASSWORD"]: Creating...
aws_ssm_parameter.env_vars["OPENUI_API_KEY"]: Creation complete after 0s [id=/team-kruschefan-project/OPENUI_API_KEY]
aws_ssm_parameter.env_vars["KEYCLOAK_FORMSAI_PASSWORD"]: Creating...
aws_ssm_parameter.env_vars["KEYCLOAK_FORMSAI_USER"]: Creation complete after 0s [id=/team-kruschefan-project/KEYCLOAK_FORMSAI_USER]
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_ADMIN_LAST_NAME"]: Creating...
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_USER_PASSWORD"]: Creation complete after 0s [id=/team-kruschefan-project/KEYCLOAK_MOCK_USER_PASSWORD]
aws_ssm_parameter.env_vars["MONGO_INITDB_DATABASE"]: Creating...
aws_ssm_parameter.env_vars["MONGO_DATABASE"]: Creation complete after 0s [id=/team-kruschefan-project/MONGO_DATABASE]
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_USER_EMAIL"]: Creating...
aws_ssm_parameter.env_vars["POSTGRES_DB"]: Creation complete after 0s [id=/team-kruschefan-project/POSTGRES_DB]
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_ADMIN"]: Creation complete after 0s [id=/team-kruschefan-project/KEYCLOAK_MOCK_ADMIN]
aws_ssm_parameter.env_vars["KEYCLOAK_USER"]: Creating...
aws_ssm_parameter.env_vars["POSTGRES_USER"]: Creation complete after 0s [id=/team-kruschefan-project/POSTGRES_USER]
aws_ssm_parameter.env_vars["KEYCLOAK_FORMSAI_PASSWORD"]: Creation complete after 0s [id=/team-kruschefan-project/KEYCLOAK_FORMSAI_PASSWORD]
aws_ssm_parameter.env_vars["POSTGRES_PASSWORD"]: Creating...
aws_ssm_parameter.env_vars["KEYCLOAK_PASSWORD"]: Creation complete after 0s [id=/team-kruschefan-project/KEYCLOAK_PASSWORD]
aws_iam_role.ec2_ssm_role: Creation complete after 1s [id=ec2-ssm-access]
aws_iam_role_policy_attachment.attach_ssm_policy: Creating...
aws_iam_instance_profile.ec2_ssm_profile: Creating...
aws_iam_role_policy_attachment.attach_ssm_policy: Creation complete after 0s [id=ec2-ssm-access/arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess]
aws_security_group.team_kruschefan_sg: Creation complete after 3s [id=sg-0690cb2fc84155187]
aws_iam_instance_profile.ec2_ssm_profile: Creation complete after 6s [id=ec2-ssm-profile]
aws_instance.team_kruschefan_project: Creating...
aws_ssm_parameter.env_vars["MONGO_INITDB_DATABASE"]: Creation complete after 10s [id=/team-kruschefan-project/MONGO_INITDB_DATABASE]
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_USER_EMAIL"]: Creation complete after 10s [id=/team-kruschefan-project/KEYCLOAK_MOCK_USER_EMAIL]
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_ADMIN_LAST_NAME"]: Still creating... [00m10s elapsed]
aws_ssm_parameter.env_vars["KEYCLOAK_USER"]: Still creating... [00m10s elapsed]
aws_ssm_parameter.env_vars["POSTGRES_PASSWORD"]: Still creating... [00m10s elapsed]
aws_ssm_parameter.env_vars["KEYCLOAK_MOCK_ADMIN_LAST_NAME"]: Creation complete after 11s [id=/team-kruschefan-project/KEYCLOAK_MOCK_ADMIN_LAST_NAME]
aws_ssm_parameter.env_vars["KEYCLOAK_USER"]: Creation complete after 13s [id=/team-kruschefan-project/KEYCLOAK_USER]
aws_ssm_parameter.env_vars["POSTGRES_PASSWORD"]: Creation complete after 13s [id=/team-kruschefan-project/POSTGRES_PASSWORD]
aws_instance.team_kruschefan_project: Still creating... [00m10s elapsed]
aws_instance.team_kruschefan_project: Still creating... [00m20s elapsed]
aws_instance.team_kruschefan_project: Still creating... [00m31s elapsed]
aws_instance.team_kruschefan_project: Provisioning with 'local-exec'...
aws_instance.team_kruschefan_project (local-exec): Executing: ["/bin/sh" "-c" "echo 'EC2 instance 3.79.185.177 created.'"]
aws_instance.team_kruschefan_project (local-exec): EC2 instance 3.79.185.177 created.
aws_instance.team_kruschefan_project: Creation complete after 33s [id=i-0db9f4ac101c6010c]

Apply complete! Resources: 37 added, 0 changed, 0 destroyed.

Outputs:

public_ip = "3.79.185.177"
ssh_connection = "ubuntu@3.79.185.177"
jay@MacBookPro ~/D/t/i/terraform (main)>                                                  (base) 
